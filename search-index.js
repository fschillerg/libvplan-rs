var searchIndex={};
searchIndex["libvplan"] = {"doc":"libvplan - indiware timetable changes client and parser","i":[[0,"client","libvplan","The client to fetch a vplan.",null,null],[3,"Client","libvplan::client","A client to retrieve a vplan.",null,null],[3,"ResponseFuture","","A `Future` that will resolve to a vplan or an error during…",null,null],[11,"new","","Creates a new client for the given url.",0,[[["str"]],["self"]]],[11,"with_auth","","Creates a new client via a preformatted HTTP Basic…",0,[[["str"]],["self"]]],[11,"with_credentials","","Creates a new client with username and password for HTTP…",0,[[["str"]],["self"]]],[11,"get","","Retrieves the timetable change for the given day",0,[[["self"],["weekday"]],["responsefuture"]]],[0,"error","libvplan","Errors...",null,null],[4,"RequestError","libvplan::error","An error during the retrieval of a vplan via the client.",null,null],[13,"InvalidDay","","Passed an invalid day (Saturday or Sunday).",1,null],[13,"URLParsingError","","Error parsing URL.",1,null],[13,"BodyParsingError","","Error during parsing body (bytes) to string.",1,null],[13,"XMLParsingError","","Error during parsing the XML response.",1,null],[13,"Http","","An error from the http crate.",1,null],[13,"Hyper","","An error from the hyper crate.",1,null],[4,"ParsingError","","An error occuring during parsing.",null,null],[13,"DocumentParsingError","","Error parsing actual XML. This might indicate something on…",2,null],[13,"DateParsingError","","Error indicating a failure to parse dates from the XML.",2,null],[0,"parser","libvplan","Parser for dates.",null,null],[5,"parse","libvplan::parser","Parses the given XML input into a vplan.",null,[[["str"]],[["parsingerror"],["result",["vplan","parsingerror"]],["vplan"]]]],[0,"vplan","libvplan","The document.",null,null],[3,"Vplan","libvplan::vplan","A plan of timetable changes",null,null],[12,"date","","Vplan date",3,null],[12,"changed","","Last time vplan was changed",3,null],[12,"days_off","","Days off school",3,null],[12,"changes","","Changes to the timetable",3,null],[12,"info","","Additional info",3,null],[3,"Change","","A change to the timetable",null,null],[12,"form","","Form which got the change",4,null],[12,"lesson","","In which lesson",4,null],[12,"subject","","(new) Subject",4,null],[12,"teacher","","(new) Teacher",4,null],[12,"room","","(new) Room",4,null],[12,"info","","Additional info",4,null],[3,"VplanDate","","A date type specific to vplan",null,null],[12,"date","","",5,null],[12,"week_type","","Week type",5,null],[4,"WeekType","","A type specific to vplan",null,null],[13,"A","","",6,null],[13,"B","","",6,null],[11,"from","libvplan::client","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[],["f"]]],[11,"from","libvplan::error","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","libvplan::vplan","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","libvplan::error","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"clone","libvplan::vplan","",3,[[["self"]],["vplan"]]],[11,"clone","","",4,[[["self"]],["change"]]],[11,"clone","","",5,[[["self"]],["vplandate"]]],[11,"clone","","",6,[[["self"]],["weektype"]]],[11,"eq","","",3,[[["vplan"],["self"]],["bool"]]],[11,"ne","","",3,[[["vplan"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["change"]],["bool"]]],[11,"ne","","",4,[[["self"],["change"]],["bool"]]],[11,"eq","","",5,[[["vplandate"],["self"]],["bool"]]],[11,"ne","","",5,[[["vplandate"],["self"]],["bool"]]],[11,"eq","","",6,[[["weektype"],["self"]],["bool"]]],[11,"fmt","libvplan::error","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","libvplan::vplan","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","libvplan::error","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"serialize","libvplan::vplan","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"poll","libvplan::client","",7,[[["self"]],["poll"]]]],"p":[[3,"Client"],[4,"RequestError"],[4,"ParsingError"],[3,"Vplan"],[3,"Change"],[3,"VplanDate"],[4,"WeekType"],[3,"ResponseFuture"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);